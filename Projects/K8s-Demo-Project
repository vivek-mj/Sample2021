Simple setup of Web application and its database. 
Webapp: Mongo Express
Database: Mongo DB
Webapp --(request to)--> Database

Steps:
1. Create MongoDB pod. 
2. To talk to the pod, we need a service. Create internal service(no external requests are allowed to the pod) Only components inside the same cluster can talk to the pod. 
3. Create Mongo express deployment. 
   (i) We need database URL of mongodb so that mongo express can connect to DB
   (ii) We need credentials i.e., username and password of the db so that it can authenticate to DB
 The way we can pass this information to Mongoexpress deployment is through its deployment configuration file through environment variables. This is how application is configured
4. Create a configmap that contains database URL, Create a secret that contains the credentials.
5. Once all the above is setup, we need Mongoexpress to be accessible through browser. In order to do that we gonna create an external service that will allow external requests to talk to the Pod. (URL: http://Ipaddressofthenode:serviceport)





Create secret before the deployment as it(deployment file) need to refer to the values from secret file.
************************mongo.yml*********************
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
  labels:
    app: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongodb
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom: 
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017


**************************mongo-secret.yml*******************(echo -n 'username' | base64) (echo -n 'password' | base64)
apiVersion: v1
kind: Secret
metadata:
    name: mongodb-secret
type: Opaque
data:
    mongo-root-username: dXNlcm5hbWU=
    mongo-root-password: cGFzc3dvcmQ=

*****************************mongo-express.yml******************1st create configmap and then the mongo express deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo-express
  labels:
    app: mongo-express
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo-express
  template:
    metadata:
      labels:
        app: mongo-express
    spec:
      containers:
      - name: mongo-express
        image: mongo-express
        ports:
        - containerPort: 8081
        env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-username
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          valueFrom: 
            secretKeyRef:
              name: mongodb-secret
              key: mongo-root-password
        - name: ME_CONFIG_MONGODB_SERVER
          valueFrom: 
            configMapKeyRef:
              name: mongodb-configmap
              key: database_url
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-express-service
spec:
  selector:
    app: mongo-express
  type: LoadBalancer  
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      nodePort: 30000

*******************************mongo-configmap.yml***************************************
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-configmap
data:
  database_url: mongodb-service

*****************************************
minikube service servicename  --> this command will assign external service, a public ip address.

From browser, when we create any db (eg:testdb) request will go to --> Mongo Express external service --> Mongo Express Pod ---(configmap:databaseURL)---> MongoDB Internal service --(Secret:username/password authenticate)---> Mongo DB pod
